/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8/userguide/building_java_projects.html
 */


apply plugin: 'java'
apply plugin: 'application'

ext.javaMainClass = "minijar.MiniJar"
if (project.hasProperty("args")) {
    ext.cmdargs = project.getProperty("args")
} else { 
    ext.cmdargs = ""
}
task cmdLineJavaExec(type: JavaExec) {
    group = "Execution"
    description = "Run the main class with JavaExecTask"
    classpath = sourceSets.main.runtimeClasspath
    main = javaMainClass
    args cmdargs.split()
}

application {
    mainClassName = javaMainClass
}

repositories {
    mavenLocal()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    // Use JCenter for resolving dependencies.
    jcenter()
   
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
   // api 'org.apache.commons:commons-math3:3.6.1'
    
    def walaVersion = '1.5.8-SNAPSHOT'

        
    implementation "com.ibm.wala:com.ibm.wala.shrike:${walaVersion}"
    implementation "com.ibm.wala:com.ibm.wala.util:${walaVersion}"
    implementation "com.ibm.wala:com.ibm.wala.core:${walaVersion}"
    implementation "com.ibm.wala:com.ibm.wala.core.java11:${walaVersion}"
    
    

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:29.0-jre'
}

jar {
    archiveBaseName = 'minijar'
    archiveVersion =  '0.1.0'
}